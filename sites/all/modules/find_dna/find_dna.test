<?php
//                FUNCTIONAL TESTS
class FindDNATests extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Find DNA Functional Tests',
      'description' => 'Tests',
    );
  }

  public function setUp() {
    parent::setUp(array('find_dna'));
  }

  public function testFormValid() {
    $this->drupalGet('find_dna_success');
    $this->assertText('Here is the complete DNA Helix!', 'Correct form displayed!');
    $form['input_dna'] = 'a';
    $this->drupalPost('find_dna_succss', $form, t('Find my full DNA!'));
    $this->assertText('T ', 'Correct output displayed!');
  }

  public function testInvalidInput() {
    $this->drupalGet('find_dna_success');
    $this->assertText('Here is the complete DNA Helix!', 'Correct form displayed!');
    $form['input_dna'] = 'b';
    $this->drupalPost('find_dna_succss', $form, t('Find my full DNA!'));
    $this->assertText('Please enter only an a, g, c or t.', 'Correct output displayed!');
  }
}

//                UNIT TESTS

class FindDNATestCase extends DrupalUnitTestCase
{
  public static function getInfo()
  {
    return array(
      'name' => 'DNA input tests',
      'description' => 'Test that the correct letters were returned based on form input',
      'group' => 'Epicodus Code Review Tests',
    );
  }

  function testDNAOutput()
  {
    $description = 'An input of A should return an output of T.';
    $input = 'a';
    $result = getHelix($input);
    $expected_output = 'T ';
    $this->assertEqual($result, $expected_output, $description);

    $description = 'An input of T should return an output of A.';
    $input = 't';
    $result = getHelix($input);
    $expected_output = 'A ';
    $this->assertEqual($result, $expected_output, $description);

    $description = 'An input of C should return an output of G.';
    $input = 'c';
    $result = getHelix($input);
    $expected_output = 'G ';
    $this->assertEqual($result, $expected_output, $description);

    $description = 'An input of G should return an output of C.';
    $input = 'g';
    $result = getHelix($input);
    $expected_output = 'C ';
    $this->assertEqual($result, $expected_output, $description);
  }
}
